Git
   버전관리(여러 파일을 하나의 버전으로 묶어 관리하는 것)
   시스템의 한 종류

버전관리 시스템의 종류
   
   클라이언트-서버 모델
      하나의 중앙 서버에서 여러 클라이언트들이 각자 필요한 데이터만 가져와
      작업을 하고 다시 중앙 서버로 보내는 통합 방식
      CVS, SVN

   분산 모델
      하나의 중앙 서버가 존재하지만, 여러 클라이언트들을 각자의 컴퓨터 저장소에
      사본을 가지고 와서 작업하는 방식
      git

Git의 장점
   1. 동시에 작업하는 사람들과 소스코드를 주고받을 필요가 없음
   2. 같은 파일을 여러 명이 동시에 병렬 개발 가능
   3. 변동 과정을 체계적으로 관리할 수 있음, 언제든 지난 시점으로 되돌릴 수 있음
   4. 중앙 서버의 데이터가 유실되어도 쉽게 복구할 수 있음 (사본을 가지고 있음)

Git 시작하기
   1. 구글에 git 설치 검색
   2. https://git-scm.com/downloads << 이동
   3. 좌측에 downloads
   4. 운영체제 맞는 것 다운로드
   5. 전부 다음 처리
   
버전 확인
   1. 터미널 열기
   2. git --version 입력

Git 명령어
   1. git init
      프로젝트 내에 로컬(개인서버) 저장소 생성
   2. git add
      깃에 버전 관리할 파일을 선택 (깃에 올릴 파일 선택, stage 올림)
   3. git commit -m "커밋할 메세지"
      하나의 버전으로 만들어서 관리 (저장)
   4. git remote add origin "깃허브주소"
      로컬 저장소에 깃허브 주소 설정
   5. git push -u origin master/main
      만든 버전(커밋)을 깃허브에 올리는 것 (밀어넣다)
   6. git pull origin master/main
      깃허브에 업데이트 된 내용을 받는 것 (가져온다)
   7. git clone
      깃허브에 올라와있는 다른 파일들 내려받기 (처음)

Github
   git으로 버전 관리한 코드를 올릴 수 있는 일종의 클라우드(저장소) 서비스
   단순히 저장만 하는 것이 아니라, 다른 유저들과 함께 코드를 공유하고 온라인으로
   하나의 프로그램을 같이 제작할 수 있게 만들어 줌
   https://github.com

터미널 경로 이동할 수 있는 방법
   cd 하위폴더 (하위폴더 이동)
