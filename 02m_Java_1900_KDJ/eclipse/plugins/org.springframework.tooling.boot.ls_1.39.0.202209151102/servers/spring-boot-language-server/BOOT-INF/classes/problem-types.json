[
  {
    "id": "boot2",
    "label": "Boot 2.x Validation",
    "toggle": {
      "label": "Enablement",
      "values": [
        "AUTO",
        "OFF",
        "ON"
      ],
      "preferenceKey": "boot-java.validation.java.boot2",
      "defaultValue": "AUTO"
    },
    "order": 1,
    "problemTypes": [
      {
        "code": "JAVA_AUTOWIRED_CONSTRUCTOR",
        "label": "Unnecessary `@Autowired`",
        "description": "Unnecessary `@Autowired` over the only constructor",
        "defaultSeverity": "WARNING"
      },
      {
        "code": "JAVA_PUBLIC_BEAN_METHOD",
        "label": "public `@Bean` method",
        "description": "Public modifier on `@Bean` method. They no longer have to be public visibility to be usable by Spring.",
        "defaultSeverity": "HINT"
      },
      {
        "code": "JAVA_TEST_SPRING_EXTENSION",
        "label": "Unnecessary `@SpringExtension`",
        "description": "`@SpringBootTest` and all test slice annotations already applies `@SpringExtension` as of Spring Boot 2.1.0.",
        "defaultSeverity": "WARNING"
      }
    ]
  },
  {
    "id": "boot3",
    "label": "Boot 3.x Validation",
    "toggle": {
      "label": "Enablement",
      "values": [
        "AUTO",
        "OFF",
        "ON"
      ],
      "preferenceKey": "boot-java.validation.java.boot3",
      "defaultValue": "AUTO"
    },
    "order": 2,
    "problemTypes": [
      {
        "code": "JAVA_CONCRETE_BEAN_TYPE",
        "label": "Not precise bean defintion type",
        "description": "Bean definition should have precise type for Spring 6 AOT",
        "defaultSeverity": "WARNING"
      }
    ]
  },
  {
    "id": "application-properties",
    "label": "Properties Validation",
    "order": 3,
    "problemTypes": [
      {
        "code": "PROP_INVALID_BEAN_NAVIGATION",
        "label": "Invalid bean navigation",
        "description": "Accessing a 'bean property' in a type that doesn't have properties (e.g. like String or Integer)",
        "defaultSeverity": "ERROR"
      },
      {
        "code": "PROP_INVALID_INDEXED_NAVIGATION",
        "label": "Invalid indexed navigation",
        "description": "Accessing a property using [] in a type that doesn't support that",
        "defaultSeverity": "ERROR"
      },
      {
        "code": "PROP_EXPECTED_DOT_OR_LBRACK",
        "label": "Expected dot or lbrack",
        "description": "Unexpected character found where a '.' or '[' was expected",
        "defaultSeverity": "ERROR"
      },
      {
        "code": "PROP_NO_MATCHING_RBRACK",
        "label": "No matching rbrack",
        "description": "Found a '[' but no matching ']'",
        "defaultSeverity": "ERROR"
      },
      {
        "code": "PROP_NON_INTEGER_IN_BRACKETS",
        "label": "Non integer in brackets",
        "description": "Use of [..] navigation with non-integer value",
        "defaultSeverity": "ERROR"
      },
      {
        "code": "PROP_VALUE_TYPE_MISMATCH",
        "label": "Value type mismatch",
        "description": "Expecting a value of a certain type, but value doesn't parse as such",
        "defaultSeverity": "ERROR"
      },
      {
        "code": "PROP_INVALID_BEAN_PROPERTY",
        "label": "Invalid bean property",
        "description": "Accessing a named property in a type that doesn't provide a property accessor with that name",
        "defaultSeverity": "ERROR"
      },
      {
        "code": "PROP_UNKNOWN_PROPERTY",
        "label": "Unknown property",
        "description": "Property-key not found in any configuration metadata on the project's classpath",
        "defaultSeverity": "WARNING"
      },
      {
        "code": "PROP_DEPRECATED",
        "label": "Deprecated",
        "description": "Property is marked as Deprecated",
        "defaultSeverity": "WARNING"
      },
      {
        "code": "PROP_DUPLICATE_KEY",
        "label": "Duplicate key",
        "description": "Multiple assignments to the same property value",
        "defaultSeverity": "ERROR"
      },
      {
        "code": "PROP_SYNTAX_ERROR",
        "label": "Syntax error",
        "description": "Syntax Error",
        "defaultSeverity": "ERROR"
      }
    ]
  },
  {
    "id": "application-yaml",
    "label": "YAML Properties Validation",
    "order": 4,
    "problemTypes": [
      {
        "code": "YAML_SYNTAX_ERROR",
        "label": "Syntax error",
        "description": "Error parsing the input using snakeyaml",
        "defaultSeverity": "ERROR"
      },
      {
        "code": "YAML_UNKNOWN_PROPERTY",
        "label": "Unknown property",
        "description": "Property-key not found in the configuration metadata on the project's classpath",
        "defaultSeverity": "WARNING"
      },
      {
        "code": "YAML_VALUE_TYPE_MISMATCH",
        "label": "Value type mismatch",
        "description": "Expecting a value of a certain type, but value doesn't parse as such",
        "defaultSeverity": "ERROR"
      },
      {
        "code": "YAML_EXPECT_SCALAR",
        "label": "Expect scalar",
        "description": "Expecting a 'scalar' value but found something more complex.",
        "defaultSeverity": "ERROR"
      },
      {
        "code": "YAML_EXPECT_TYPE_FOUND_SEQUENCE",
        "label": "Expect type found sequence",
        "description": "Found a 'sequence' node where a non 'list-like' type is expected",
        "defaultSeverity": "ERROR"
      },
      {
        "code": "YAML_EXPECT_TYPE_FOUND_MAPPING",
        "label": "Expect type found mapping",
        "description": "Found a 'mapping' node where a type that can't be treated as a 'property map' is expected",
        "defaultSeverity": "ERROR"
      },
      {
        "code": "YAML_EXPECT_MAPPING",
        "label": "Expect mapping",
        "description": "Expecting a 'mapping' node but found something else",
        "defaultSeverity": "ERROR"
      },
      {
        "code": "YAML_EXPECT_BEAN_PROPERTY_NAME",
        "label": "Expect bean property name",
        "description": "Expecting a 'bean property' name but found something more complex",
        "defaultSeverity": "ERROR"
      },
      {
        "code": "YAML_INVALID_BEAN_PROPERTY",
        "label": "Invalid bean property",
        "description": "Accessing a named property in a type that doesn't provide a property accessor with that name",
        "defaultSeverity": "ERROR"
      },
      {
        "code": "YAML_DEPRECATED_ERROR",
        "label": "Deprecated error",
        "description": "Property is marked as Deprecated(Error)",
        "defaultSeverity": "ERROR"
      },
      {
        "code": "YAML_DEPRECATED_WARNING",
        "label": "Deprecated warning",
        "description": "Property is marked as Deprecated(Warning)",
        "defaultSeverity": "WARNING"
      },
      {
        "code": "YAML_DUPLICATE_KEY",
        "label": "Duplicate key",
        "description": "A mapping node contains multiple entries for the same key",
        "defaultSeverity": "ERROR"
      },
      {
        "code": "YAML_SHOULD_ESCAPE",
        "label": "Should escape",
        "description": "This key contains special characters and should probably be escaped by surrounding it with '[]'",
        "defaultSeverity": "WARNING"
      }
    ]
  },
  {
    "id": "spel",
    "label": "SPEL Validation",
    "toggle": {
      "label": "Enablement",
      "values": [
        "OFF",
        "ON"
      ],
      "preferenceKey": "boot-java.validation.spel.on",
      "defaultValue": "ON"
    },
    "order": 5,
    "problemTypes": [
      {
        "code": "JAVA_SPEL_EXPRESSION_SYNTAX",
        "label": "SpEL Expression Syntax",
        "description": "SpEL parser raised a ParseException",
        "defaultSeverity": "ERROR"
      }
    ]
  }
]