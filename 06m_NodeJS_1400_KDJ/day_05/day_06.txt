쿠키와 세션

   쿠키(cookie)
      : 쿠키는 브라우저 로컬에 저장되는 키와 값이 들어있는 작은 데이터 파일
      : 사용자가 인증 유효 기간을 명시, 유효시간 정해지면 브라우저가 종료되어도
       쿠키 유지
      : 그러나 설정이 되어있지 않다면 해당 브라우저를 닫는 순간 삭제

      : 최대 300개 저장, 하나 당 4KB

      사용 예시
         - 자동로그인(이메일, 비밀번호, jwt 무한유지),
         - 3일동안 보지 않기/오늘 보지 않기 (팝업창)
         - 쇼핑몰 장바구니, 세션 스토리지(웹스토리지)
   세션(session)
      : 세션은 쿠키를 기반, 파일을 브라우저에 저장하는 쿠키와 달리 서버에서 관리한다.
      : 서버측에서는 사용자 구분을 위해 각각의 세션 ID를 부여, 웹 브라우저가
      서버에 접속해서 종료할 때까지 상태 유지, 접속 시간에 제한을 둘 수 있음
      : 정보를 서버에서 관리하기 때문에 보안에 더 용이
      : 그러나 사용자가 많아질수록 서버 자체에 가지고 있는 세션 데이터 상승, 
      따라서 서버에 부담 증가
      : 로그인 인증정보와 같은 보안상 중요한 작업을 수행할 때 사용


웹 스토리지 (프론트엔드)

   쿠키, 세션의 단점 보안 단 백엔드와 공유가 되지 않음

   로컬스토리지 : 브라우저가 종료되어도 데이터를 영구적으로 저장
   세션스토리지 : 브라우저가 닫히는 경우 데이터가 삭제

   최대 용량 5MB

   ex)
   localstorege.setItem("키", 값);
   localstorege.getItem("키");

---------------------------------------------------------------------

cookie-parser
   서버에서 cookie를 생성하고 삭제와 같은 관리를 하기 위한 모듈
express-session
   express에서

---------------------------------------------------------------------
day_05의 id(자동생성), content, createdat, updatedat, userIdx(선택)
table name posts 스키마 만들어오기

관계설정 belongTo, belongToMany, hasOne, hasMany

-------------------------------------------------------------

프론트 배포 (정적인 사이트의 경우)
   * aws s3 --react, vueJS
   dothome
   githubpage
   nestify (ci/cd)

서버사이드렌더링(SSR) --nextJS 일반 html은 X
   aws ec2
   docker + ...
