프론트엔드
React를 잘하는 사람?

1. hook 함수 활용능력
2. 컴포넌트를 기능 단위로 잘 분해하는 능력
3. 클라이언트의 요구 사항에 맞는 적합한 라이브러리들을 찾아내 적용하는 능력
4. 유지 보수하기 쉽도록 상태 관리를 잘하는 능력
5. 백엔드가 필요한 데이터를 알고리즘을 활용하여 잘 보내거나 잘 받아오는 능력

--------------------------------------------------------------------------

전역 상태 관리

   react에서 가상 돔이 변화를 인지할 수 있게 해주는 변수 = state(상태)
   이러한 상태를 어떠한 컴포넌트에서도 사용할 수 있도록 전역으로 '관리'하는 것

   (상위 컴포넌트) -> (하위 컴포넌트) = props
                  -> 상위 -> 하위 -> 하위 -> 상위 -> 하위 -> (하위컴포넌트) => 구조 복잡

   (전역 상태) - 상위 컴포넌트  
               - 하위 컴포넌트

--------------------------------------------------------------------------

react에서 만든 전역상태관리 훅함수(useReducer, contextAPI)

   이 훅함수를 부모격으로 하여 만들어진
   redux(기초, 쉬움), mobx(전역상태에 익숙해야 함),
   recoil(가장 대중적, 사용법, 전역상태 익숙해진 상태에서 써야함)

--------------------------------------------------------------------------

useReducer

   -지금까지 사용했던 상태 업데이트 로직을 컴포넌트에서 분리 (상태 관리)

--------------------------------------------------------------------------

전역 상태 관리

   key point = <전달>

--------------------------------------------------------------------------

Context
   - 전역 상태 관리를 위한 도구
   - 기능 자체는 Redux와 동일한 기능 [Redux가 Context 기반으로 제작]
   - 전역 상태의 업데이트 로직을 따로 관리할 수 있는 reducer와 함께 사용
   (그러나, Redux가 더 다양하고 편리한 기능 지원)
