* Hook함수
   react에서 상태 변경, 즉 가상돔의 상태를 변경할 수 있는 함수
   그에 따른 생명 주기를 통해 다양한 이벤트를 실행할 수 있는 함수

   react의 초기 상태
      class형 컴포넌트를 사용
      현재 : const 컴포넌트명 = function() { ... }
      과거 : class 컴포넌트명 extends Components { ... }

   라이프 사이클 : [페이지가 처음 열렸을 때 ~ 페이지가 닫혔을 때까지]
      이 사이에 일어나는 이벤트나 값 변경 등을 관리
   
   Class는 다양한 기능을 사용할 수 있지만 기계와 사용자를 혼돈시킨다.
   숙련된 React개발자 조차도 Class를 통한 React의 완벽한 이해는 힘들다.
   ==> 함수형으로 리액트를 만들어 보자 -> 함수형 컴포넌트의 등장
      -> 자연스럽게 생명주기(라이프 사이클)이 사라지고 hook 함수가 등장

-------------------------------------------------------------------------------

1. useState
   - Hooks의 상태 관리 함수
   - 컴포넌트에서 바뀌는 값을 관리
   - 값이 바뀐 것을 감지하여 리랜더링
   - 값이 바뀐 것을 감지하여 리랜더링 시켜줘야할 필요가 있을 때 사용하는 함수
2. useRef
   - js에서 getElementById, querySelector와 같은 DOM selector 함수처럼
   - React에서 DOM에 접근하게 되는 일이 생긴다면 접근하게 해주는 Hooks 함수
   - ref 객체 내부의 값은 render와 상관없이 유지된다
3. useMemo
   - 
4. useCallback
   *메모이제이션
5. useEffect
   - 

-------------------------------------------------------------------------------
* state 불변성, operator
